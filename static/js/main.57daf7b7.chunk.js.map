{"version":3,"sources":["reportWebVitals.js","components/card/Card.jsx","components/cardlist-component/car-list.component.jsx","components/search-box/search-box.component.jsx","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","Component","ReactDOM","render","document","getElementById"],"mappings":"0OAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,mDCJDQ,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACQ,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,mCAAML,EAAMI,QAAQE,KAApB,OACA,kCAAKN,EAAMI,QAAQG,MAAnB,WCHCC,G,MAAW,SAACR,GACvB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMS,SAASC,KAAI,SAACN,GAAD,OAClB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCJdM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACYZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC+BXG,G,wDAlCX,aAAe,IAAD,8BACV,gBACKC,MAAQ,CACTR,SAAU,GACVS,YAAa,IAJP,E,qDASd,WAAqB,IAAD,OAChBC,MAAM,8CACL1B,MAAK,SAAA2B,GAAQ,OAAKA,EAASC,UAC3B5B,MAAK,SAAA6B,GAAK,OAAI,EAAKC,SAAS,CAAEd,SAAUa,S,oBAG7C,WAAU,IAAD,OACL,EAAkCE,KAAKP,MAA/BR,EAAR,EAAQA,SAAUS,EAAlB,EAAkBA,YACZO,EAAmBhB,EAASiB,QAAO,SAAAtB,GAAO,OAC5CA,EAAQE,KAAKqB,cAAcC,SAASV,EAAYS,kBAEpD,OACI,sBAAK1B,UAAU,MAAf,UACI,uDACA,cAAC,EAAD,CACIW,YAAY,iBACZC,aAAc,SAAAgB,GAAC,OAAI,EAAKN,SAAS,CAAEL,YAAaW,EAAEC,OAAOC,WAE7D,cAAC,EAAD,CAAUtB,SAAUgB,W,GA5BlBO,cCGlBC,IAASC,OAEL,8BACE,cAAC,EAAD,MAKJC,SAASC,eAAe,SAM1B9C,M","file":"static/js/main.57daf7b7.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport './card.styles.css';\n\nexport const Card = props => (\n    <div className='card-container'>\n            <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\n            <h2> {props.monster.name} </h2>\n            <p> {props.monster.email} </p>\n    </div>\n);","import React from 'react';\nimport { Card } from '../card/Card';\nimport './card-list.styles.css';\n\nexport const CardList = (props) => {\n  return (\n    <div className=\"card-list\">\n      {props.monsters.map((monster) => (\n        <Card key={monster.id} monster={monster} />\n      ))}\n    </div>\n  );\n};","import React from 'react';\n\nimport './search-box.styles.css';\n\nexport const SearchBox = ({ placeholder, handleChange }) => (\n    <input \n                className='search'\n                type='search' \n                placeholder={placeholder} \n                onChange={handleChange}\n                />\n                \n);","import React, { Component } from 'react';\nimport { CardList } from './components/cardlist-component/car-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\nimport './App.css';\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            monsters: [],\n            searchField: ''\n        };\n\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response =>  response.json())\n        .then(users => this.setState({ monsters: users}));\n    }\n    \n    render() {\n        const { monsters, searchField } = this.state;\n        const filteredMonsters = monsters.filter(monster =>\n            monster.name.toLowerCase().includes(searchField.toLowerCase())\n            );\n        return (\n            <div className='App'>\n                <h1 >Azeke's monter roulet</h1>\n                <SearchBox \n                    placeholder='search monster'\n                    handleChange={e => this.setState({ searchField: e.target.value })}\n                    />\n                <CardList monsters={filteredMonsters} />               \n            </div>\n        );\n    }\n    \n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nimport App from './App';\n\nReactDOM.render(\n  \n    <div>\n      <App />\n    </div>\n    \n    \n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}